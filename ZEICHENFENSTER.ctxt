#BlueJ class context
comment0.target=ZEICHENFENSTER
comment0.text=\r\n\ Class\ ZEICHENFENSTER\ -\ Eine\ Klasse,\ die\ einfache\ grafische\ Zeichnungen\ \r\n\ in\ einem\ Programmfenster\ erm\u00EF\u00BF\u00BDglicht.\r\n\ \r\n\ @author\ Michael\ Kolling\ (mik)\r\n\ @author\ Bruce\ Quig\r\n\ @author\ Christian\ Heidrich\r\n\r\n\ @version\ 2007.05.07\r\n
comment1.params=titel
comment1.target=ZEICHENFENSTER(java.lang.String)
comment1.text=\r\n\ Erzeugt\ eine\ Zeichenfenster\ mit\ Standardma\u00EF\u00BF\u00BDen\ 600*500\ und\ Hintergrundfarbe\ wei\u00EF\u00BF\u00BD\ \r\n\ @param\ titel\ \ Titel\ des\ Fensters\ \ \ \ \ \r\n
comment10.params=x\ y\ halbachseX\ halbachseY\ startWinkel\ winkel
comment10.target=void\ zeichneBogen(int,\ int,\ int,\ int,\ int,\ int)
comment10.text=\r\n\ Zeichnet\ einen\ Elipsenbogen\ (Siehe\ Graphics.drawArc)\r\n\ @param\ x\ x-Koordinate\ des\ Elipsenmittelpunkts\r\n\ @param\ y\ y-Koordinate\ des\ Elipsenmittelpunkts\r\n\ @param\ halbachseX\ Halbachse\ der\ Elipse\ in\ x-Richtung\r\n\ @param\ halbachseY\ Halbachse\ der\ Elipse\ in\ y-Richtung\r\n\ @param\ startWinkel\ Polarwinkel,\ an\ dem\ der\ Bogen\ anf\u00EF\u00BF\u00BDngt\r\n\ @param\ winkel\ Polarwinkel,\ welchen\ der\ Bogen\ durchl\u00EF\u00BF\u00BDuft\r\n
comment11.params=x\ y\ radius
comment11.target=void\ zeichneKreis(int,\ int,\ int)
comment11.text=\r\n\ Zeichnet\ einen\ Kreis\ (Siehe\ Graphics.drawOval)\r\n\ @param\ x\ x-Koordinate\ des\ Mittelpunkts\r\n\ @param\ y\ y-Koordinate\ des\ Mittelpunkts\r\n\ @param\ radius\ Kreisradius\r\n
comment12.params=x\ y\ radius\ farbe
comment12.target=void\ fuelleKreis(int,\ int,\ int,\ java.lang.String)
comment12.text=\r\n\ F\u00EF\u00BF\u00BDllt\ das\ Innere\ eines\ Kreises\ mit\ der\ angegebenen\ Farbe.\ \r\n\ @param\ x\ x-Koordinate\ des\ Mittelpunkts\r\n\ @param\ y\ y-Koordinate\ des\ Mittelpunkts\r\n\ @param\ radius\ Kreisradius\r\n\ @param\ \ farbe\ \ F\u00EF\u00BF\u00BDllfarbe\ f\u00EF\u00BF\u00BDr\ den\ Kreis,\ erlaubt\ sind\ "weiss"\ "schwarz"\ "rot"\r\n\ "gruen"\ "blau"\ "gelb"\ "magenta"\ "cyan"\ "grau"\r\n
comment13.params=x\ y\ radius\ farbnr
comment13.target=void\ fuelleKreis(int,\ int,\ int,\ int)
comment13.text=\r\n\ F\u00EF\u00BF\u00BDllt\ das\ Innere\ eines\ Kreises\ mit\ der\ angegebenen\ Farbe.\ \r\n\ @param\ x\ x-Koordinate\ des\ Mittelpunkts\r\n\ @param\ y\ y-Koordinate\ des\ Mittelpunkts\r\n\ @param\ radius\ Kreisradius\r\n\ @param\ \ farbnr\ \ F\u00EF\u00BF\u00BDllfarbnummer\ f\u00EF\u00BF\u00BDr\ den\ Kreis\ (0\ bis\ 8)\r\n
comment14.params=x\ y\ radius
comment14.target=void\ loescheKreis(int,\ int,\ int)
comment14.text=\r\n\ L\u00EF\u00BF\u00BDscht\ das\ Innere\ eines\ Kreises\ \r\n\ @param\ x\ x-Koordinate\ des\ Mittelpunkts\r\n\ @param\ y\ y-Koordinate\ des\ Mittelpunkts\r\n\ @param\ radius\ Kreisradius\r\n
comment15.params=shape
comment15.target=void\ zeichne(java.awt.Shape)
comment15.text=\r\n\ Zeichnet\ den\ Umriss\ eines\ Shape-Objekts.\r\n\ @param\ \ shape\ \ das\ Shape-Object,\ welches\ gezeichnet\ werden\ soll\r\n
comment16.params=shape\ farbe
comment16.target=void\ fuelle(java.awt.Shape,\ java.lang.String)
comment16.text=\r\n\ F\u00EF\u00BF\u00BDllt\ das\ Innere\ eines\ Shape-Objekts\ mit\ der\ angegebenen\ Farbe.\ \r\n\ @param\ \ shape\ \ das\ Shape-Objekt,\ welches\ gef\u00EF\u00BF\u00BDllt\ werden\ soll\ \r\n\ @param\ \ farbe\ \ F\u00EF\u00BF\u00BDllfarbe\ f\u00EF\u00BF\u00BDr\ das\ Shape-Objekt,\ erlaubt\ sind\ "weiss"\ "schwarz"\ "rot"\r\n\ "gruen"\ "blau"\ "gelb"\ "magenta"\ "cyan"\ "grau"\r\n
comment17.params=shape\ farbnr
comment17.target=void\ fuelle(java.awt.Shape,\ int)
comment17.text=\r\n\ F\u00EF\u00BF\u00BDllt\ das\ Innere\ eines\ Shape-Objekts\ mit\ der\ angegebenen\ Farbe.\ \r\n\ @param\ \ shape\ \ das\ Shape-Objekt,\ welches\ gef\u00EF\u00BF\u00BDllt\ werden\ soll\ \r\n\ @param\ \ farbnr\ \ F\u00EF\u00BF\u00BDllfarbnummer\ f\u00EF\u00BF\u00BDr\ das\ Shape-Objekt\ (0\ bis\ 8)\r\n
comment18.params=shape
comment18.target=void\ loesche(java.awt.Shape)
comment18.text=\r\n\ L\u00EF\u00BF\u00BDscht\ das\ Innere\ eines\ Shape-Objekts.\r\n\ @param\ \ shape\ \ das\ Shape-Object,\ welches\ gel\u00EF\u00BF\u00BDscht\ werden\ soll\ \r\n
comment19.params=xPos\ yPos\ breite\ hoehe
comment19.target=void\ zeichneRechteck(int,\ int,\ int,\ int)
comment19.text=\r\n\ Zeichnet\ den\ Rand\ des\ Rechtecks\ mit\ der\ aktuellen\ Farbe.\r\n\ @param\ xPos,yPos\ Koordinaten\ der\ linken\ oberen\ Ecke\ \r\n\ @param\ breite,\ hoehe\ Breite\ und\ H\u00EF\u00BF\u00BDhe\ des\ Rechtecks\r\n
comment2.params=titel\ breite\ hoehe
comment2.target=ZEICHENFENSTER(java.lang.String,\ int,\ int)
comment2.text=\r\n\ Erzeugt\ ein\ Zeichenfenster\ mit\ wei\u00EF\u00BF\u00BDem\ Hintergrund.\r\n\ @param\ titel\ \ Fensterueberschirft\r\n\ @param\ breite\ \ Breite\ des\ Fensters\r\n\ @param\ hoehe\ \ Hoehe\ des\ Fensters\r\n
comment20.params=xPos\ yPos\ breite\ hoehe\ farbe
comment20.target=void\ fuelleRechteck(int,\ int,\ int,\ int,\ java.lang.String)
comment20.text=\r\n\ F\u00EF\u00BF\u00BDllt\ das\ Innere\ des\ Rechtecks\ mit\ der\ angegebenen\ Farbe.\r\n\ @param\ xPos,yPos\ Koordinaten\ der\ linken\ oberen\ Ecke\ \r\n\ @param\ breite,\ hoehe\ Breite\ und\ H\u00EF\u00BF\u00BDhe\ des\ Rechtecks\r\n\ @param\ \ farbe\ \ F\u00EF\u00BF\u00BDllfarbe\ f\u00EF\u00BF\u00BDr\ das\ Rechteck,\ erlaubt\ sind\ "weiss"\ "schwarz"\ "rot"\r\n\ "gruen"\ "blau"\ "gelb"\ "magenta"\ "cyan"\ "grau"\r\n
comment21.params=xPos\ yPos\ breite\ hoehe\ farbnr
comment21.target=void\ fuelleRechteck(int,\ int,\ int,\ int,\ int)
comment21.text=\r\n\ F\u00EF\u00BF\u00BDllt\ das\ Innere\ des\ Rechtecks\ mit\ der\ angegebenen\ Farbe.\r\n\ @param\ xPos,yPos\ Koordinaten\ der\ linken\ oberen\ Ecke\ \r\n\ @param\ breite,\ hoehe\ Breite\ und\ H\u00EF\u00BF\u00BDhe\ des\ Rechtecks\r\n\ @param\ \ farbnr\ \ F\u00EF\u00BF\u00BDllfarbnummer\ f\u00EF\u00BF\u00BDr\ das\ Rechteck\ (0\ bis\ 8)\r\n
comment22.params=xPos\ yPos\ breite\ hoehe
comment22.target=void\ loescheRechteck(int,\ int,\ int,\ int)
comment22.text=\r\n\ L\u00EF\u00BF\u00BDscht\ das\ Innere\ eines\ Rechtecks.\r\n\ @param\ xPos,yPos\ Koordinaten\ der\ linken\ oberen\ Ecke\ \r\n\ @param\ breite,\ hoehe\ Breite\ und\ H\u00EF\u00BF\u00BDhe\ des\ Rechtecks\r\n
comment23.params=x1\ y1\ x2\ y2\ x3\ y3
comment23.target=java.awt.Polygon\ gibDreieck(int,\ int,\ int,\ int,\ int,\ int)
comment24.params=x1\ y1\ x2\ y2\ x3\ y3
comment24.target=void\ zeichneDreieck(int,\ int,\ int,\ int,\ int,\ int)
comment24.text=\r\n\ Zeichnet\ den\ Rand\ eines\ Dreiecks\ mit\ der\ aktuellen\ Farbe.\r\n\ @param\ x1,y1\ Koordinaten\ des\ ersten\ Eckpunkts\ \r\n\ @param\ x2,y2\ Koordinaten\ des\ zweiten\ Eckpunkts\ \r\n\ @param\ x3,y3\ Koordinaten\ des\ dritten\ Eckpunkts\ \r\n
comment25.params=x1\ y1\ x2\ y2\ x3\ y3\ farbe
comment25.target=void\ fuelleDreieck(int,\ int,\ int,\ int,\ int,\ int,\ java.lang.String)
comment25.text=\r\n\ F\u00EF\u00BF\u00BDllt\ das\ Innere\ eines\ Dreiecks\ mit\ der\ angegebenen\ Farbe.\r\n\ @param\ x1,y1\ Koordinaten\ des\ ersten\ Eckpunkts\ \r\n\ @param\ x2,y2\ Koordinaten\ des\ zweiten\ Eckpunkts\ \r\n\ @param\ x3,y3\ Koordinaten\ des\ dritten\ Eckpunkts\ \r\n\ @param\ \ farbe\ \ F\u00EF\u00BF\u00BDllfarbe\ f\u00EF\u00BF\u00BDr\ das\ Dreieck,\ erlaubt\ sind\ "weiss"\ "schwarz"\ "rot"\r\n\ "gruen"\ "blau"\ "gelb"\ "magenta"\ "cyan"\ "grau"\r\n
comment26.params=x1\ y1\ x2\ y2\ x3\ y3\ farbnr
comment26.target=void\ fuelleDreieck(int,\ int,\ int,\ int,\ int,\ int,\ int)
comment26.text=\r\n\ F\u00EF\u00BF\u00BDllt\ das\ Innere\ eines\ Dreiecks\ mit\ der\ angegebenen\ Farbe.\r\n\ @param\ x1,y1\ Koordinaten\ des\ ersten\ Eckpunkts\ \r\n\ @param\ x2,y2\ Koordinaten\ des\ zweiten\ Eckpunkts\ \r\n\ @param\ x3,y3\ Koordinaten\ des\ dritten\ Eckpunkts\ \r\n\ @param\ \ farbnr\ \ F\u00EF\u00BF\u00BDllfarbnummer\ f\u00EF\u00BF\u00BDr\ das\ Dreieck\ (0\ bis\ 8)\r\n
comment27.params=x1\ y1\ x2\ y2\ x3\ y3
comment27.target=void\ loescheDreieck(int,\ int,\ int,\ int,\ int,\ int)
comment27.text=\r\n\ L\u00EF\u00BF\u00BDscht\ das\ Innere\ eines\ Dreicks\r\n\ @param\ x1,y1\ Koordinaten\ des\ ersten\ Eckpunkts\ \r\n\ @param\ x2,y2\ Koordinaten\ des\ zweiten\ Eckpunkts\ \r\n\ @param\ x3,y3\ Koordinaten\ des\ dritten\ Eckpunkts\ \r\n
comment28.params=
comment28.target=void\ loescheAlles()
comment28.text=\r\n\ L\u00EF\u00BF\u00BDscht\ den\ Inhalt\ des\ Zeichenfensters.\r\n
comment29.params=shape
comment29.target=void\ loescheRand(java.awt.Shape)
comment29.text=\r\n\ L\u00EF\u00BF\u00BDscht\ den\ Umriss\ eines\ Shape-Objekts.\r\n\ @param\ \ shape\ \ das\ Shape-Object,\ dessen\ Umriss\ gel\u00EF\u00BF\u00BDscht\ werden\ soll\ \r\n
comment3.params=titel\ breite\ hoehe\ showIcon\ maximize
comment3.target=ZEICHENFENSTER(java.lang.String,\ int,\ int,\ boolean,\ boolean)
comment30.params=bild\ x\ y
comment30.target=boolean\ zeichneBild(java.awt.Image,\ int,\ int)
comment30.text=\r\n\ Zeichnet\ ein\ Bild\ in\ das\ Zeichnenfenster\ .\r\n\ @param\ \ bild\ \ \ \ das\ anzuzeigende\ Bild\ \r\n\ @param\ \ x\ \ \ \ \ \ \ x-Koordinate\ des\ linken\ Bildrands\ \r\n\ @param\ \ y\ \ \ \ \ \ \ y-Koordinate\ des\ oberen\ Bildrands\ \r\n\ @return\ \ gibt\ eines\ booleschen\ Wert\ zur\u00EF\u00BF\u00BDck,\ der\ angibt,\ ob\ das\ Bild\ vollst\u00EF\u00BF\u00BDndig\ geladen\ \r\n\ \ \ \ \ \ \ \ \ \ werden\ konnte\ \r\n
comment31.params=text\ x\ y
comment31.target=void\ zeichneText(java.lang.String,\ int,\ int)
comment31.text=\r\n\ Zeichnet\ einen\ Text.\r\n\ @param\ \ text\ \ \ \ die\ anzuzeigende\ Zeichenkette\ \r\n\ @param\ \ x\ \ \ \ \ \ \ x-Koordinate\ des\ linken\ Rands\ \r\n\ @param\ \ y\ \ \ \ \ \ \ y-Koordinate\ des\ oberen\ Rands\ \r\n
comment32.params=text\ x\ y
comment32.target=void\ loescheText(java.lang.String,\ int,\ int)
comment32.text=\r\n\ L\u00EF\u00BF\u00BDscht\ einen\ Text\ vom\ Zeichenfenster.\r\n\ @param\ \ text\ \ \ \ die\ zu\ l\u00EF\u00BF\u00BDschende\ Zeichenkette\ \r\n\ @param\ \ x\ \ \ \ \ \ \ x-Koordinate\ des\ linken\ Rands\ \r\n\ @param\ \ y\ \ \ \ \ \ \ y-Koordinate\ des\ oberen\ Rands\ \r\n
comment33.params=x1\ y1\ x2\ y2
comment33.target=void\ zeichneStrecke(int,\ int,\ int,\ int)
comment33.text=\r\n\ Zeichnet\ eine\ Strecke\ ins\ Zeichenfenster.\r\n\ @param\ \ x1\ \ \ x-Koordinate\ des\ Anfangspunkts\ der\ Strecke\ \r\n\ @param\ \ y1\ \ \ y-Koordinate\ des\ Anfangspunkts\ der\ Strecke\r\n\ @param\ \ x2\ \ \ x-Koordinate\ des\ Endpunkts\ der\ Strecke\ \r\n\ @param\ \ y2\ \ \ y-Koordinate\ des\ Endpunkts\ der\ Strecke\ \ \r\n
comment34.params=neueFarbe
comment34.target=void\ setzeVordergrundFarbe(java.lang.String)
comment34.text=\r\n\ Setzt\ die\ Vordergrundfarbe\ des\ Zeichenfensters.\r\n\ @param\ \ neueFarbe\ \ \ neue\ Vordergrundfarbe\ \r\n
comment35.params=neueFarbe
comment35.target=void\ setzeVordergrundFarbe(java.awt.Color)
comment36.params=farbnr
comment36.target=java.awt.Color\ farbeZuColor(int)
comment37.params=farbe
comment37.target=java.awt.Color\ farbeZuColor(java.lang.String)
comment38.params=color
comment38.target=java.lang.String\ colorZuFarbe(java.awt.Color)
comment39.params=
comment39.target=java.lang.String\ gibVordergrundFarbe()
comment39.text=\r\n\ Gibt\ die\ aktuelle\ Vordergrundfarbe\ des\ Zeichenfensters\ zur\u00EF\u00BF\u00BDck.\r\n\ @return\ \ \ die\ aktuelle\ Vordergrundfarbe\ \r\n
comment4.params=titel\ breite\ hoehe\ hintergrundFarbe
comment4.target=ZEICHENFENSTER(java.lang.String,\ int,\ int,\ java.awt.Color)
comment4.text=\r\n\ Erzeugt\ ein\ Zeichenfenster.\r\n\ @param\ titel\ \ Fensterueberschirft\r\n\ @param\ breite\ \ Breite\ des\ Fensters\r\n\ @param\ hoehe\ \ Hoehe\ des\ Fensters\r\n\ @param\ hintergrundFarbe\ \ Hintergrundfarbe\ des\ Zeichenfensters\r\n
comment40.params=neueFarbe
comment40.target=void\ setzeHintergrundFarbe(java.lang.String)
comment40.text=\r\n\ Setzt\ die\ Hintergrundfarbe\ des\ Zeichenfensters.\r\n\ @param\ \ neueFarbe\ \ \ neue\ Hintergrundfarbe\ \r\n
comment41.params=neueFarbe
comment41.target=void\ setzeHintergrundFarbe(java.awt.Color)
comment42.params=
comment42.target=java.lang.String\ gibHintergrundFarbe()
comment42.text=\r\n\ Gibt\ die\ aktuelle\ Hintergrundfarbe\ des\ Zeichenfensters\ zur\u00EF\u00BF\u00BDck.\r\n\ @return\ \ \ die\ aktuelle\ Hintergrundfarbe\ \r\n
comment43.params=neuerZeichensatz
comment43.target=void\ setzeZeichensatz(java.awt.Font)
comment43.text=\r\n\ \u00EF\u00BF\u00BDndert\ den\ aktuellen\ Zeichensatz\ des\ Zeichenfensters.\r\n\ @param\ \ neuerZeichensatz\ \ \ Zeichensatz,\ der\ k\u00EF\u00BF\u00BDnftig\ f\u00EF\u00BF\u00BDr\ Zeichenkettenausgaben\ verwendet\ wird\r\n
comment44.params=
comment44.target=java.awt.Font\ gibZeichensatz()
comment44.text=\r\n\ Gibt\ den\ aktuellen\ Zeichensatz\ des\ Zeichenfensters\ zur\u00EF\u00BF\u00BDck.\r\n\ @return\ \ \ \ \ den\ aktuellen\ Zeichensatz\r\n
comment45.params=breite\ hoehe
comment45.target=void\ setzeMasse(int,\ int)
comment45.text=\r\n\ \u00EF\u00BF\u00BDndert\ die\ Abmessungen\ des\ Zeichenfensters.\r\n\ @param\ \ breite\ \ \ \ neue\ Breite\ \r\n\ @param\ \ hoehe\ \ \ \ \ neue\ H\u00EF\u00BF\u00BDhe\ \r\n
comment46.params=
comment46.target=java.awt.Dimension\ gibMasse()
comment46.text=\r\n\ Gibt\ die\ Abmessungen\ des\ Zeichenfensters\ zur\u00EF\u00BF\u00BDck.\r\n\ @return\ \ \ \ \ die\ aktuellen\ Abmessungen\ des\ Zeichenfensters\r\n
comment47.params=zeit
comment47.target=void\ warte(int)
comment47.text=\r\n\ Wartet\ eine\ bestimmte\ Zeit.\r\n\ Eine\ kurze\ Verz\u00EF\u00BF\u00BDgerung\ kann\ z.\ B.\ f\u00EF\u00BF\u00BDr\ Animationen\ verwendet\ werden.\r\n\ @param\ \ zeit\ \ Wartezeit\ in\ Millisekunden\ \r\n
comment48.params=element\ position
comment48.target=void\ komponenteHinzufuegen(javax.swing.JComponent,\ java.lang.String)
comment48.text=\r\n\ F\u00EF\u00BF\u00BDgt\ ein\ weiteres\ Steuerungselement\ in\ die\ rechte\ Steuerungsleiste\ ein.\r\n\ @param\ \ element\ \ Das\ einzuf\u00EF\u00BF\u00BDgende\ Steuerungselement\ muss\ aus\ JComponent\ abgeleitet\r\n\ sein.\ z.\ B.\ JButton,\ JComboBox.\ \r\n
comment49.params=titelNeu
comment49.target=void\ setzeTitel(java.lang.String)
comment49.text=\r\n\ Beschriftet\ den\ Titel\ des\ Zeichenfensters\ neu.\r\n\ @param\ \ titelNeu\ \ Text\ der\ neuen\ Fenster\u00EF\u00BF\u00BDberschrift\r\n
comment5.params=
comment5.target=ZEICHENFENSTER\ gibFenster()
comment6.params=
comment6.target=void\ toggleIcon()
comment7.params=
comment7.target=void\ maximize()
comment8.params=
comment8.target=void\ zeige()
comment8.text=\r\n\ Macht\ das\ Zeichenfenster\ sichtbar\ bzw.\ setzt\ es\ in\ den\ Vordergrund,\r\n\ falls\ es\ bereits\ sichtbar\ ist.\r\n
comment9.params=
comment9.target=boolean\ istSichtbar()
comment9.text=\r\n\ Gibt\ Information\ \u00EF\u00BF\u00BDber\ die\ Sichtbarkeit.\r\n\ @return\ \ true\ falls\ das\ Fenster\ sichtbar\ ist.\r\n
numComments=50
